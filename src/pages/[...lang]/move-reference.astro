---
import { getCollection } from "astro:content";
import StarlightPage from "@astrojs/starlight/components/StarlightPage.astro";
import { CardGrid, LinkCard, Tabs, TabItem } from "@astrojs/starlight/components";
import { SUPPORTED_LANGUAGES } from "../../config/locales";
import { MOVE_REFERENCE_BRANCHES, type MoveNetwork } from "../../content.config";

export async function getStaticPaths() {
  return SUPPORTED_LANGUAGES.map(({ code }) => ({
    params: { lang: code === "en" ? undefined : code },
    props: { lang: code },
  }));
}

const { lang } = Astro.props;
const moveReferenceEntries = await getCollection("moveReference");

// Get entries for a specific network
const getNetworkFrameworks = (network: MoveNetwork) => {
  const networkEntries = moveReferenceEntries.filter((entry) => entry.data.network === network);

  return Object.entries(Object.groupBy(networkEntries, (entry) => entry.data.framework));
};
---

<StarlightPage
  frontmatter={{ title: "Move Reference", tableOfContents: false, prev: false, next: false }}
>
  <Tabs>
    {
      MOVE_REFERENCE_BRANCHES.map(({ label, icon, name, ref }) => (
        <TabItem label={label} icon={icon}>
          <div class="framework-section">
            <CardGrid>
              {getNetworkFrameworks(name).map(([framework, entries]) => (
                <LinkCard
                  href={
                    lang === "en"
                      ? `/move-reference/${ref}/${framework}`
                      : `/${lang}/move-reference/${ref}/${framework}`
                  }
                  title={framework}
                  description={`${entries.length} modules available for ${label}`}
                />
              ))}
            </CardGrid>
          </div>
        </TabItem>
      ))
    }
  </Tabs>
</StarlightPage>

<style>
  .framework-section {
    margin: 0.75rem 0;
  }
</style>
