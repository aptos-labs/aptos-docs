---
import Default from "@astrojs/starlight/components/Head.astro";
// import { ClientRouter } from "astro:transitions";
import { Schema } from "astro-seo-schema";
import TextSizeProvider from "../components/TextSizeProvider.astro";
import { getImageUrl } from "~/lib/og-image/getImageUrl";

const entryData = Astro.locals.starlightRoute.entry.data || Astro.props.entry.data;
const ogImageUrl = await getImageUrl(new URL("/api/og-image.png", Astro.site), {
  title: entryData.title,
});

const { description, lang, lastUpdated, title } = Astro.locals.starlightRoute;
---

<Schema
  item={{
    "@context": "https://schema.org",
    "@type": "TechArticle",
    headline: title,
    description: description,
    inLanguage: lang,
    url: Astro.url.href,
    sameAs: [
      "https://aptosfoundation.org/",
      "https://discord.com/invite/aptosnetwork",
      "https://github.com/aptos-foundation",
      "https://www.linkedin.com/company/aptos-foundation/",
      "https://www.reddit.com/r/Aptos/",
      "https://t.me/aptos",
      "https://twitter.com/aptos",
    ],
    audience: {
      "@type": "Audience",
      audienceType: "Developers",
    },
    mainEntityOfPage: {
      "@type": "WebPage",
      "@id": Astro.url.href,
    },
    author: {
      "@type": "Organization",
      name: "Aptos",
      url: Astro.site.href,
      logo: {
        "@type": "ImageObject",
        url: `${Astro.site.href}schema-logo.png`,
      },
    },
    publisher: {
      "@type": "Organization",
      name: "Aptos",
      url: Astro.site.href,
      logo: {
        "@type": "ImageObject",
        url: `${Astro.site.href}schema-logo.png`,
      },
    },
    dateModified: lastUpdated,
    // datePublished: lastUpdated,
  }}
/>

<link
  rel="preload"
  href="/fonts/AtkinsonHyperlegibleNext-VariableFont_wght.woff2"
  as="font"
  type="font/woff2"
  crossorigin
/>

<TextSizeProvider />
<Default {...Astro.props}><slot /></Default>

<!-- <meta property="article:published_time" content={entryData.publishDate} /> -->
<meta property="article:modified_time" content={lastUpdated.toISOString()} />
<!-- Algolia docsearch language facet -->
<meta name="docsearch:language" content={lang} />
<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.request.url} />
<meta property="og:title" content={entryData.title} />
{entryData.description && <meta property="og:description" content={entryData.description} />}
{
  ogImageUrl && (
    <>
      {/* Open Graph image */}
      <meta property="og:image" content={ogImageUrl} />

      {/* Twitter card */}
      <meta name="twitter:image" content={ogImageUrl} />
      <meta name="twitter:card" content="summary_large_image" />
    </>
  )
}
<meta name="twitter:title" content={entryData.title} />
{entryData.description && <meta name="twitter:description" content={entryData.description} />}

<!-- <style is:global>
  ::view-transition-old(root),
  ::view-transition-new(root) {
    animation-duration: 0.1s;
    animation-timing-function: cubic-bezier(0.4, 0, 0.1, 1);
  }
</style>
<ClientRouter /> -->
