---
import Default from "@astrojs/starlight/components/Head.astro";
// import { ClientRouter } from "astro:transitions";
import TextSizeProvider from "../components/TextSizeProvider.astro";
import { getImageUrl } from "~/lib/og-image/getImageUrl";

const { lang } = Astro.props;
const entryData = Astro.locals.starlightRoute.entry.data || Astro.props.entry.data;
const ogImageUrl = await getImageUrl(new URL("/api/og-image.png", Astro.site), {
  title: entryData.title,
});
---

<link
  rel="preload"
  href="/fonts/AtkinsonHyperlegibleNext-VariableFont_wght.woff2"
  as="font"
  type="font/woff2"
  crossorigin
/>

<TextSizeProvider />
<Default {...Astro.props}><slot /></Default>
<!-- Algolia docsearch language facet -->
<meta name="docsearch:language" content={lang} />
<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={Astro.request.url} />
<meta property="og:title" content={entryData.title} />
{entryData.description && <meta property="og:description" content={entryData.description} />}
{
  ogImageUrl && (
    <>
      {/* Open Graph image */}
      <meta property="og:image" content={ogImageUrl} />

      {/* Twitter card */}
      <meta name="twitter:image" content={ogImageUrl} />
      <meta name="twitter:card" content="summary_large_image" />
    </>
  )
}
<meta name="twitter:title" content={entryData.title} />
{entryData.description && <meta name="twitter:description" content={entryData.description} />}
<script>
  import { processMermaidExpressiveCodeBlock } from "~/lib/mermaid";

  document.addEventListener("DOMContentLoaded", () => {
    processMermaidExpressiveCodeBlock();
  });
</script>
<!-- <style is:global>
  ::view-transition-old(root),
  ::view-transition-new(root) {
    animation-duration: 0.1s;
    animation-timing-function: cubic-bezier(0.4, 0, 0.1, 1);
  }
</style>
<ClientRouter /> -->
